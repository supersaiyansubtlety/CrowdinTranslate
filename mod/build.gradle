plugins {
    id 'fabric-loom' version '1.6.+'
    id 'maven-publish'
}

sourceCompatibility = 21
targetCompatibility = 21

archivesBaseName = "crowdin-translate"

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// These are, actually, not even used in this project.
// They are only included to make loom happy.
// Use old versions intentionally to make this work with a broad range of MCs.
dependencies {
    include(implementation project(':base'))

    minecraft "com.mojang:minecraft:1.21"
    mappings "net.fabricmc:yarn:1.21+build.2"
    modImplementation "net.fabricmc:fabric-loader:0.15.11"
    modRuntimeOnly fabricApi.module("fabric-resource-loader-v0", "0.100.1+1.21")
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
java {
    withSourcesJar()
}

jar {
    from "LICENSE"
    // manifest {
    //     attributes(
    //         'Main-Class': 'de.guntram.mcmod.crowdintranslate.CrowdinTranslate'
    //     )
    // }
}

// publishing {
//     publications {
//         mavenJava(MavenPublication) {
//             from components.java
//         }
//     }
//     // repositories {
//     //     maven {
//     //         url = "file://tmp/mymavenrepo"
//     //     }
//     // }
// }

publishing {
    publications {
        mavenJavaMod(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        repositories {
            maven {
                url "https://gitlab.com/api/v4/projects/$gitlab_project_id/packages/maven"
                credentials(HttpHeaderCredentials) {
                    name = 'Private-Token'
                    value = System.getenv("GITLAB_TOKEN")
                }
                authentication {
                    header(HttpHeaderAuthentication)
                }
            }
        }
    }
}
